name: Testing with conda

on:
  push:
    branches:
    - 'main'
    - 'release-*'
  pull_request:
    branches:
      - 'main'
      - 'release-*'
  release:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          # Needed to get tags so that git describe works during package build
          fetch-depth: "0"

      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%V")"
        shell: bash

      - name: Cache Mambaforge and Pip packages
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: |
            ~/conda_pkgs_dir
            ~/.cache/pip
          key:
            ${{runner.os}}-condapkg-${{env.CACHE_NUMBER}}-${{steps.get-date.outputs.date}}-${{hashFiles('environment-dev.yml','conda/meta.yaml')}}

      - name: Cache Mambaforge environment
        uses: actions/cache@v2
        id: cache-mambaforge-environment
        env:
          CACHE_NUMBER: 0
        with:
          path: /usr/share/miniconda3/envs/mantidimaging-dev.cache
          key:
            ${{runner.os}}-condaenv-${{env.CACHE_NUMBER}}-${{steps.get-date.outputs.date}}-${{hashFiles('environment-dev.yml','conda/meta.yaml')}}

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          miniforge-version: latest
          miniforge-variant: Mambaforge
          activate-environment: mantidimaging-dev
          auto-activate-base: false
          use-mamba: true

      - name: Mantid Imaging developer dependencies
        if: steps.cache-mambaforge-environment.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run: |
          conda deactivate
          python3 ./setup.py create_dev_env
          cp -Ta /usr/share/miniconda3/envs/mantidimaging-dev /usr/share/miniconda3/envs/mantidimaging-dev.cache

      - name: Mantid Imaging developer dependencies - from cache
        if: steps.cache-mambaforge-environment.outputs.cache-hit == 'true'
        shell: bash -l {0}
        run: |
          cp -Ta /usr/share/miniconda3/envs/mantidimaging-dev.cache /usr/share/miniconda3/envs/mantidimaging-dev

      - name: Other dependencies
        shell: bash -l {0}
        run: |
          sudo apt update -y
          sudo apt-get install -y xvfb libxcb* libxkb*

      - name: List versions
        shell: bash -l {0}
        run: |
          mamba env list
          python --version; conda list ; pip list

      - name: pytest
        timeout-minutes: 10
        if: always()
        shell: bash -l {0}
        run: |
          xvfb-run --auto-servernum python -m pytest --cov --cov-report=xml -n auto --ignore=mantidimaging/eyes_tests --durations=10 --randomly-seed=1

      - name: pytest no parallel
        timeout-minutes: 10
        if: always()
        shell: bash -l {0}
        run: |
          xvfb-run --auto-servernum python -m pytest --cov --cov-report=xml --ignore=mantidimaging/eyes_tests --durations=10 --randomly-seed=1

      - name: pytest no cov
        timeout-minutes: 10
        if: always()
        shell: bash -l {0}
        run: |
          xvfb-run --auto-servernum python -m pytest -n auto --ignore=mantidimaging/eyes_tests --durations=10 --randomly-seed=1

      - name: pytest no parallel no cov
        timeout-minutes: 10
        if: always()
        shell: bash -l {0}
        run: |
          xvfb-run --auto-servernum python -m pytest --ignore=mantidimaging/eyes_tests --durations=10 --randomly-seed=1
