name: Testing on Windows

on:
  push:
    branches:
    - 'main'
    - 'release-*'
  pull_request:
    branches:
      - 'main'
      - 'release-*'
  release:
  merge_group:

jobs:
  test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          # Needed to get tags so that git describe works during package build
          fetch-depth: "0"

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y%V")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Mambaforge and Pip packages
        uses: actions/cache@v3.2.5
        env:
          CACHE_NUMBER: 0
        with:
          path: |
            ~/conda_pkgs_dir
            ~/.cache/pip
          key:
            ${{runner.os}}-condapkg-${{env.CACHE_NUMBER}}-${{steps.get-date.outputs.date}}-${{hashFiles('environment-dev.yml','conda/meta.yaml')}}

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          miniforge-version: latest
          miniforge-variant: Mambaforge
          activate-environment: mantidimaging-dev
          auto-activate-base: false
          use-mamba: true

      - name: Cache Mambaforge environment
        uses: actions/cache@v3.2.5
        id: cache-mambaforge-environment
        env:
          CACHE_NUMBER: 0
        with:
          path: ${{env.CONDA}}/envs/mantidimaging-dev
          key:
            ${{runner.os}}-condaenv-${{env.CACHE_NUMBER}}-${{steps.get-date.outputs.date}}-${{hashFiles('environment-dev.yml','conda/meta.yaml')}}

      - name: Mantid Imaging developer dependencies
        if: steps.cache-mambaforge-environment.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run: |
          conda deactivate
          python ./setup.py create_dev_env

      - name: List versions
        shell: bash -l {0}
        run: |
          mamba env list
          python --version; conda list ; pip list

      # Label as 'windows-build-test' for testing purposes.
      # To re-enable, use the if rule from the conda workflow and change label to 'unstable' after testing
      - name: publish package
        # do build on PR, so that we have a 2.5 version in the main channel
        # if: github.event_name == 'release' || (github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release')))
        uses: ./.github/actions/publish-package
        with:
          label: unstable
          token: ${{ secrets.ANACONDA_API_TOKEN }}
